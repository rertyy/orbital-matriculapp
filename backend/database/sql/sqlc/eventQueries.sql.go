// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: eventQueries.sql

package sqlc

import (
	"context"
)

const getAllEvents = `-- name: GetAllEvents :many
SELECT event_id, event_name, event_body, event_start_date, event_end_date
FROM events
`

func (q *Queries) GetAllEvents(ctx context.Context) ([]Event, error) {
	rows, err := q.db.QueryContext(ctx, getAllEvents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Event
	for rows.Next() {
		var i Event
		if err := rows.Scan(
			&i.EventID,
			&i.EventName,
			&i.EventBody,
			&i.EventStartDate,
			&i.EventEndDate,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
